version: '3'

services:

  generator:
    container_name: generator
    restart: always
    build: ./generator
    environment:
      KAFKA_BROKER_URL: kafka:9092
    volumes:
      - ./generator:/app
    depends_on:
      - kafka
      - postgres
      - zookeeper
      - redis
    ports:
      - "5050:5050"
    command: python app.py


  detector:
    container_name: detector
    restart: always
    build: ./detector
    volumes:
      - ./detector:/app
    environment:
      KAFKA_BROKER_URL: kafka:9092
      CASSANDRA_HOST: cassandra
    depends_on:
      - generator
      - kafka
      - postgres
      - zookeeper
      - cassandra
      - redis
    ports:
      - "5070:5070"
    command: python app.py


  redis:
    image: redis:latest
    container_name: redis
    hostname: redis
    volumes:
      - redis_data:/data
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis
    ports:
      - "6379:6379"

  postgres:
    container_name: postgres
    image: postgres:10
    volumes:
      - "/var/run/postgres/postgres.sock:/var/run/postgres/postgres.sock"
      - "dbdata:/var/lib/postgresql/data"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5432:5432

  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_PORT: 2181
      ZOOKEEPER_HOST: zookeeper

  kafka:
    restart: always
    image: wurstmeister/kafka:0.10.2.0
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_PORT: 9092
    ports:
      - "9092:9092"
    expose:
      - 9092

  cassandra:
    container_name: cassandra
    image: cassandra:latest
    ports:
      - "7000:7000"
      - "9042:9042"


volumes:
  redis_data:
  dbdata:
  gen_code:
  det_code:


#networks:
#  default:
#    external:
#      name: kafka-network
